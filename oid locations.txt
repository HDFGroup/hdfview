hdfview_adb
src
hdf
object
fits
FitsDataset.java (3 matches)
64: * @param oid the unique identifier for this dataset. 
70: long[] oid) { 
71: super(fileFormat, dName, HObject.SEPARATOR, oid); 
FitsFile.java (4 matches)
192: long[] oid = {0}; 
198: oid); 
245: oid[0] = hdu.hashCode(); 
246: FitsDataset d =  new FitsDataset(this, hdu, hduName, oid); 
FitsGroup.java
53: * @param oid the unique identifier of this data object. 
h4
H4File.java (41 matches)
673: long[] oid = { tag, ref }; 
674: group = new H4Group(this, gname, path, pgroup, oid); 
755: long[] oid = { 0, 0 }; 
759: oid); 
994: long[] oid = { tag, ref }; 
995: if (theGroup.equalsOID(oid)) { 
1,088: long[] oid = { tag, ref }; 
1,091: objList.add(oid); 
1,093: else if (find(oid)) { 
1,094: log.trace("getGRImage(): Image found in memory with OID:({}, {})", oid[0], oid[1]); 
1,099: gr = new H4GRImage(this, objName[0], path, oid); 
1,179: long[] oid = { tag, ref }; 
1,182: objList.add(oid); 
1,184: else if (find(oid)) { 
1,185: log.trace("getSDS(): SDS found in memory with OID:({}, {})", oid[0], oid[1]); 
1,190: sds = new H4SDS(this, objName[0], path, oid); 
1,220: long[] oid = { tag, ref }; 
1,223: objList.add(oid); 
1,225: else if (find(oid)) { 
1,226: log.trace("getVdata(): VData found in memory with OID:({}, {})", oid[0], oid[1]); 
1,264: vdata = new H4Vdata(this, objName[0], path, oid); 
1,296: long[] oid = { tag, ref }; 
1,305: objList.add(oid); 
1,307: else if (find(oid)) { 
1,308: log.trace("getVGroup(): VGroup found in memory with OID:({}, {})", oid[0], oid[1]); 
1,343: vgroup = new H4Group(this, objName[0], path, pgroup, oid); 
1,354: private final boolean find(long[] oid) { 
1,355: log.trace("find(): start: oid({}, {})", oid[0], oid[1]); 
1,370: if ((theOID[0] == oid[0]) && (theOID[1] == oid[1])) { 
1,378: objList.add(oid); 
1,855: long[] oid = { 0, 0 }; 
1,860: H4Group rootGroup = new H4Group(this, "/", null, null, oid); 
2,051: long oid[] = { HDFConstants.DFTAG_VG, ref }; 
2,052: H4Group g = new H4Group(this, objName[0], path, null, oid); 
H4GRImage.java (9 matches)
142: * @param oid the unique identifier of this data object. 
149: long[] oid) 
151: super (theFile, name, path, oid); 
286: long[] oid = {HDFConstants.DFTAG_RIG, ref}; 
287: dataset = new H4GRImage(pgroup.getFileFormat(), dname, path, oid); 
624: log.trace("open(): start: for file={} with ref={}", getFID(), (short) oid[1]); 
628: int index = HDFLibrary.GRreftoindex(grid, (short)oid[1]); 
1,001: long[] oid = {HDFConstants.DFTAG_NDG, ref}; 
1,002: dataset = new H4GRImage(file, name, path, oid); 
H4Group.java (12 matches)
69: * @param oid the unique identifier of this data object. 
77: long[] oid) 
79: super (theFile, name, path, parent, ((oid == null) ? DEFAULT_OID : oid)); 
128: if (oid[1] > 0) { 
252: log.trace("open(): start: for file={} with ref={}", getFID(), oid[1]); 
254: if (oid[1] <= 0) { 
255: log.debug("open(): oid[1] <= 0"); 
265: vgid = HDFLibrary.Vattach(getFID(), (int)oid[1], "w"); 
277: vgid = HDFLibrary.Vattach(getFID(), (int)oid[1], "r"); 
380: long[] oid = {tag, ref}; 
381: group = new H4Group(file, name, path, pgroup, oid); 
H4SDS.java (10 matches)
142: * @param oid the unique identifier of this data object. 
149: long[] oid) 
151: super (theFile, name, path, oid); 
314: long[] oid = {HDFConstants.DFTAG_NDG, ref}; 
315: dataset = new H4SDS(pgroup.getFileFormat(), dname, path, oid); 
666: int tag = (int)oid[0]; 
670: index = (int)oid[1]; //HDFLibrary.SDidtoref(id) fails for netCDF 
673: index = HDFLibrary.SDreftoindex(sdid, (int)oid[1]); 
1,072: long[] oid = {HDFConstants.DFTAG_NDG, ref}; 
1,073: dataset = new H4SDS(file, name, path, oid); 
H4Vdata.java (5 matches)
127: * @param oid the unique identifier of this data object. 
134: long[] oid) 
136: super (theFile, name, path, oid); 
590: vsid = HDFLibrary.VSattach(getFID(), (int)oid[1], "w"); 
600: vsid = HDFLibrary.VSattach(getFID(), (int)oid[1], "r"); 
h5
H5CompoundDS.java (7 matches)
172: * @param oid 
173: *            the oid of the data object. 
176: public H5CompoundDS(FileFormat theFile, String theName, String thePath, long[] oid) { 
177: super(theFile, theName, thePath, oid); 
180: if ((oid == null) && (theFile != null)) { 
184: this.oid = new long[1]; 
185: this.oid[0] = HDFNativeData.byteToLong(refBuf, 0); 
H5Datatype.java (7 matches)
136: * @param oid 
137: *            the oid of the dataset. 
140: public H5Datatype(FileFormat theFile, String name, String path, long[] oid) { 
141: super(theFile, name, path, oid); 
144: if ((oid == null) && (theFile != null)) { 
148: this.oid = new long[1]; 
149: this.oid[0] = HDFNativeData.byteToLong(refBuf, 0); 
H5File.java (41 matches)
787: Hashtable<String, long[]> oidMap = new Hashtable<>(); 
792: oidMap.put(String.valueOf((srcObj.getOID())[0]), newObj.getOID()); 
861: long[] theOID = oidMap.get(String.valueOf(refs[j])); 
1,278: long[] oids; 
1,285: oids = new long[(int)n]; 
1,286: H5.H5Fget_obj_ids(fid, HDF5Constants.H5F_OBJ_ALL, n, oids); 
1,289: log.trace("close(): object[{}] id={}", i, oids[i]); 
1,290: type = H5.H5Iget_type(oids[i]); 
1,294: H5.H5Dclose(oids[i]); 
1,297: log.debug("close(): Object[{}] H5Dclose(oids[{}] {}) failure: ", i, i, oids[i], ex2); 
1,302: H5.H5Gclose(oids[i]); 
1,305: log.debug("close(): Object[{}] H5Gclose(oids[{}] {}) failure: ", i, i, oids[i], ex2); 
1,310: H5.H5Tclose(oids[i]); 
1,313: log.debug("close(): Object[{}] H5Tclose(oids[{}] {}) failure: ", i, i, oids[i], ex2); 
1,318: H5.H5Aclose(oids[i]); 
1,321: log.debug("close(): Object[{}] H5Aclose(oids[{}] {}) failure: ", i, i, oids[i], ex2); 
1,429: long oid = H5.H5Oopen(fid, path, HDF5Constants.H5P_DEFAULT); 
1,431: if (oid >= 0) { 
1,432: info = H5.H5Oget_info(oid); 
1,477: H5.H5Oclose(oid); 
1,480: log.debug("get(): H5Oclose(oid {}) failure: ", oid, ex); 
1,543: long[] oid = new long[1]; 
1,544: oid[0] = l; // save the object ID 
2,457: long oid[] = { objRefs[i], fNos[i] }; 
2,488: if (tmpObj.equalsOID(oid) && (tmpObj.getPath() != null)) { 
2,554: d = new H5CompoundDS(this, obj_name, fullPath, oid); // deprecated! 
2,558: d = new H5ScalarDS(this, obj_name, fullPath, oid); // deprecated! 
2,564: Datatype t = new H5Datatype(this, obj_name, fullPath, oid); // deprecated! 
2,569: H5Link link = new H5Link(this, obj_name, fullPath, oid); 
2,910: long oid = -1; 
2,919: oid = H5.H5Oopen(gid, thisFullName, HDF5Constants.H5P_DEFAULT); 
2,932: .H5Oget_info_by_idx(oid, thisFullName, indexType, indexOrder, i, HDF5Constants.H5P_DEFAULT); 
2,976: if (oid >= 0) 
2,977: H5.H5Oclose(oid); 
2,980: log.debug("getGroup(): {} H5Oclose(oid {}) failure: ", name, oid, ex); 
H5Group.java (11 matches)
92: * @param oid 
93: *            the oid of this group. 
96: public H5Group(FileFormat theFile, String name, String path, Group parent, long[] oid) { 
97: super(theFile, name, path, parent, oid); 
101: if ((oid == null) && (theFile != null)) { 
105: this.oid = new long[1]; 
106: this.oid[0] = HDFNativeData.byteToLong(ref_buf, 0); 
109: this.oid = new long[1]; 
110: this.oid[0] = 0; 
452: long[] oid = { l }; 
454: group = new H5Group(file, name, path, pgroup, oid); 
H5Link.java (2 matches)
58: long[] oid) { 
59: super(theFile, theName, thePath, oid); 
H5ScalarDS.java (16 matches)
114: * @param oid 
115: *            the oid of the data object. 
118: public H5ScalarDS(FileFormat theFile, String theName, String thePath, long[] oid) { 
119: super(theFile, theName, thePath, oid); 
124: if ((oid == null) && (theFile != null)) { 
128: this.oid = new long[1]; 
129: this.oid[0] = HDFNativeData.byteToLong(refbuf, 0); 
1,780: private void checkCFconvention(long oid) throws Exception { 
1,783: Object avalue = getAttrValue(oid, "_FillValue"); 
1,794: avalue = getAttrValue(oid, "valid_range"); 
1,809: avalue = getAttrValue(oid, "valid_min"); 
1,817: avalue = getAttrValue(oid, "valid_max"); 
1,834: private Object getAttrValue(long oid, String aname) { 
1,844: if(H5.H5Aexists_by_name(oid, ".", aname, HDF5Constants.H5P_DEFAULT)) 
1,845: aid = H5.H5Aopen_by_name(oid, ".", aname, HDF5Constants.H5P_DEFAULT, HDF5Constants.H5P_DEFAULT); 
nc2
NC2Dataset.java (3 matches)
58: * @param oid 
61: public NC2Dataset(FileFormat fileFormat, Variable ncDataset, long[] oid) { 
62: super(fileFormat, ncDataset.getName(), HObject.SEPARATOR, oid); 
NC2File.java (4 matches)
169: long[] oid = { 0 }; 
175: oid); 
186: oid[0] = ncDataset.hashCode(); 
187: d = new NC2Dataset(this, ncDataset, oid); 
NC2Group.java
58: * @param oid 
CompoundDS.java (4 matches)
155: * @param oid 
156: *            the oid of the CompoundDS. 
159: public CompoundDS(FileFormat theFile, String dsName, String dsPath, long[] oid) { 
160: super(theFile, dsName, dsPath, oid); 
Dataset.java (4 matches)
208: * @param oid 
209: *            the oid of this Dataset. 
212: public Dataset(FileFormat theFile, String dsName, String dsPath, long[] oid) { 
213: super(theFile, dsName, dsPath, oid); 
Datatype.java (4 matches)
240: * @param oid 
241: *            the oidof the datatype. 
244: public Datatype(FileFormat theFile, String typeName, String typePath, long[] oid) { 
245: super(theFile, typeName, typePath, oid); 
FileFormat.java (6 matches)
1,790: * @param oid 
1,791: *            the oid to search for 
1,795: public static final HObject findObject(FileFormat file, long[] oid) { 
1,798: if ((file == null) || (oid == null)) { 
1,799: log.debug("findObject(): file is null or oid is null"); 
1,816: if (theObj.equalsOID(oid)) break; 
Group.java (4 matches)
100: * @param oid 
101: *            the oid of this group. 
104: public Group(FileFormat theFile, String grpName, String grpPath, Group grpParent, long[] oid) { 
105: super(theFile, grpName, grpPath, oid); 
HObject.java (18 matches)
65: *     long[] oid = new long[1]; 
66: *     oid[0] = HDFNativeData.byteToLong(ref_buf, 0); 
122: * oid[0] = tag, oid[1] = ref_id.<br> 
124: * oid[0] = obj_id. 
126: protected long[]           oid; 
174: * @param oid 
178: public HObject(FileFormat theFile, String theName, String thePath, long[] oid) { 
180: this.oid = oid; 
280: protected final void debug(Object msg) { 
460: if (oid == null) { 
464: return oid.clone(); 
482: if ((theID == null) || (oid == null)) { 
487: int n2 = oid.length; 
494: boolean isMatched = (theID[0] == oid[0]); 
497: isMatched = (theID[i] == oid[i]); 
560: return (int) oid[0]; 
ScalarDS.java (3 matches)
141: * @param oid 
145: public ScalarDS(FileFormat theFile, String theName, String thePath, long[] oid) { 
146: super(theFile, theName, thePath, oid); 
view
MetaDataView
DefaultBaseMetaDataView.java (10 matches)
228: long oid = -1; 
231: oid = dataObject.open(); 
232: if (oid >= 0) { 
234: ocplID = H5.H5Gget_create_plist(oid); 
237: ocplID = H5.H5Dget_create_plist(oid); 
253: dataObject.close(oid); 
500: String oidStr = null; 
503: oidStr = String.valueOf(oID[0]); 
504: if (isH4) oidStr += ", " + oID[1]; 
520: text.setText(oidStr); 
DefaultGroupMetaDataView.java (5 matches)
70: long oid = -1; 
72: oid = g.open(); 
73: if (oid >= 0) { 
74: ocplID = H5.H5Gget_create_plist(oid); 
78: g.close(oid); 
TableView
DefaultScalarDSTableView.java (15 matches)
774: protected void showObjRefData(long ref) { 
775: long[] oid = { ref }; 
778: HObject obj = FileFormat.findObject(((HObject) dataObject).getFileFormat(), oid); 
898: protected void showRegRefData(String reg) { 
911: String oidStr = reg.substring(reg.indexOf('/'), reg.indexOf(' ')); 
912: log.trace("showRegRefData(): isPointSelection={} oidStr={}", isPointSelection, 
913: oidStr); 
937: HObject obj = FileFormat.findObject(((HObject) dataObject).getFileFormat(), oidStr); 
1,113: public void handleLayerEvent(ILayerEvent e) { 
1,144: String oidStr = reg.substring(reg.indexOf('/'), reg.indexOf(' ')); 
1,145: log.trace("ScalarDSCellSelectionListener:RegRef CellSelected: isPointSelection={} oidStr={}", 
1,146: isPointSelection, oidStr); 
1,168: HObject obj = FileFormat.findObject(((HObject) dataObject).getFileFormat(), oidStr); 
1,392: long[] oid = { ref.longValue() }; 
1,396: HObject obj = FileFormat.findObject(((HObject) dataObject).getFileFormat(), oid); 
test
object
misc
DebugHDF.java (3 matches)
218: long[] oid = new long[1]; 
220: oid[0] = refs[i]; 
221: HObject obj = FileFormat.findObject(file, oid); 
TestH5Object.java (2 matches)
537: final long oid[] = grp.getOID(); 
538: if (!hobj.equalsOID(oid)) { 
H5CompoundDSTest.java (9 matches)
1,358: * <li>new H5CompoundDS (file, null, fullpath, oid) 
1,359: * <li>new H5CompoundDS (file, fullname, null, oid) 
1,360: * <li>new H5CompoundDS (file, name, path, oid) 
1,367: public void testH5CompoundDSFileFormatStringStringLongArray() { 
1,377: long[] oid = null; 
1,383: oid = new long[1]; 
1,384: oid[0] = l; // save the object ID 
1,389: assertNotNull(oid); 
1,391: H5CompoundDS dset = new H5CompoundDS(file, names[idx], paths[idx], oid); 
H5GroupTest.java (9 matches)
432: * <li>new H5Group (file, null, fullpath, pgroup, oid) 
433: * <li>new H5Group (file, fullname, null, pgroup, oid) 
434: * <li>new H5Group (file, name, path, pgroup, oid) 
441: public void testH5GroupFileFormatStringStringGroupLongArray() { 
458: long[] oid = null; 
463: oid = new long[1]; 
464: oid[0] = l; // save the object ID 
470: assertNotNull(oid); 
472: final H5Group grp = new H5Group(file, names[idx], paths[idx], pgroup, oid); 
H5ScalarDSTest.java (9 matches)
1,421: * <li>new H5ScalarDS (file, null, fullpath, oid) 
1,422: * <li>new H5ScalarDS (file, fullname, null, oid) 
1,423: * <li>new H5ScalarDS (file, name, path, oid) 
1,430: public void testH5ScalarDSFileFormatStringStringLongArray() { 
1,440: long[] oid = null; 
1,446: oid = new long[1]; 
1,447: oid[0] = l; // save the object ID 
1,452: assertNotNull(oid); 
1,454: H5ScalarDS dset = new H5ScalarDS(file, names[idx], paths[idx], oid); 
H5TestFile.java (4 matches)
188: long[] oid = pal.getOID(); 
194: attr.write(oid); 
240: oid = file.get(OBJ_NAMES[i]).getOID(); 
241: refs[i] = oid[0];  
