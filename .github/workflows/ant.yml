# This workflow will build a Java project with Ant
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-ant

name: Java CI

on:
  workflow_dispatch:
#  push:
#    branches: [ "master" ]
#  pull_request:
#    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up JDK 19
      uses: actions/setup-java@v3
      with:
        java-version: '19'
        distribution: 'temurin'

    - name Get hdf4 release base name
      uses: dsaltares/fetch-gh-release-asset@master
      with:
        repo: 'HDFGroup/hdf4'
        version: 'tags/snapshot'
        regex: true
        file: 'last-file.txt'

    - name: Read base-name file
      id: gethdf4base
      run: echo "hdf4-name=$(cat last-file.txt)" >> $GITHUB_OUTPUT

    - name Get hdf4 release
      uses: dsaltares/fetch-gh-release-asset@master
      with:
        repo: 'HDFGroup/hdf4'
        #version: 'tags/hdf-4_2_16-2'
        #file: 'hdf-4_2_16-2-ubuntu-2204.tar.gz'
        version: 'tags/snapshot'
        regex: true
        file: '${{ steps.gethdf4base.outputs.hdf4-name }}-ubuntu-2204.tar.gz'

      - name: List files for the space (Linux)
        run: |
              ls -l ${{ github.workspace }}
              ls ${{ runner.workspace }}

      - name: Uncompress hdf4 binary (Linux)
        run: tar -zxvf ${{ github.workspace }}/${{ steps.gethdf4base.outputs.hdf4-name }}-ubuntu-2204.tar.gz

      - name: Install hdf4 binary (Linux)
        run: sh ${{ github.workspace }}/${{ steps.gethdf4base.outputs.hdf4-name }}.sh --exclude-subdir --skip-license

      - name: set hdflib name
        id: set-hdflib-name
        env:
          HDFLIB: ${{ github.workspace }}/${{ steps.gethdf4base.outputs.hdf4-name }}/lib
        run: echo "HDFLIB_ENV=$HDFLIB" >> $GITHUB_ENV

    - name Get hdf5 release base name
      uses: dsaltares/fetch-gh-release-asset@master
      with:
        repo: 'HDFGroup/hdf5'
        version: 'tags/snapshot'
        regex: true
        file: 'last-file.txt'

    - name: Read base-name file
      id: gethdf5base
      run: echo "hdf5-name=$(cat last-file.txt)" >> $GITHUB_OUTPUT

    - name Get hdf5 release
      uses: dsaltares/fetch-gh-release-asset@master
      with:
        repo: 'HDFGroup/hdf5'
        #version: 'tags/1.14.2'
        #file: 'hdf5-1_14_2-ubuntu-2204.tar.gz'
        version: 'tags/snapshot'
        regex: true
        file: '${{ steps.gethdf5base.outputs.hdf5-name }}-ubuntu-2204.tar.gz'

      - name: List files for the space (Linux)
        run: |
              ls -l ${{ github.workspace }}
              ls ${{ runner.workspace }}

      - name: Uncompress hdf5 binary (Linux)
        run: tar -zxvf ${{ github.workspace }}/${{ steps.gethdf5base.outputs.hdf5-name }}.tar.gz

      - name: Install hdf5 binary (Linux)
        run: sh ${{ github.workspace }}/${{ steps.gethdf5base.outputs.hdf5-name }}.sh --exclude-subdir --skip-license

      - name: set hdf5lib name
        id: set-hdf5lib-name
        env:
          HDF5LIB: ${{ github.workspace }}/${{ steps.gethdf5base.outputs.hdf5-name }}/lib
        run: echo "HDF5LIB_ENV=$HDF5LIB" >> $GITHUB_ENV

    - name: Build with Ant
      run: ant -noinput -buildfile build.xml binaryPackage

      - name: List files in the space (Linux)
        run: |
              ls ${{ github.workspace }}
              ls -l ${{ runner.workspace }}

      # Save files created by ctest script
      - name: Save published binary (Linux)
        uses: actions/upload-artifact@v3
        with:
              name: tgz-ubuntu-2204-binary
              path: ${{ runner.workspace }}/hdfview-3.99.99-ubuntu-2204.tar.gz
              if-no-files-found: error # 'warn' or 'ignore' are also available, defaults to `warn`

  test:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up JDK 19
      uses: actions/setup-java@v3
      with:
        java-version: '19'
        distribution: 'temurin'

    - name: Build with Ant
      run: ant -noinput -buildfile build.xml junit

