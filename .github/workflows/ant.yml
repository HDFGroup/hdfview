# This workflow will build a Java project with Ant
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-ant

name: Java CI

on:
  workflow_dispatch:
#  push:
#    branches: [ "master" ]
#  pull_request:
#    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up JDK 19
      uses: actions/setup-java@v3
      with:
        java-version: '19'
        distribution: 'temurin'

    - name: Get hdf4 release base name
#      uses: robinraju/release-downloader@v1.8
#      with:
#        repository: "byrnHDF/hdf4"
#        tag: "snapshot"
#        fileName: "last-file.txt"
      uses: dsaltares/fetch-gh-release-asset@master
      with:
        repo: 'HDFGroup/hdf4'
        version: 'tags/snapshot'
        file: 'last-file.txt'

    - name: Read base-name file
      id: gethdf4base
      run: echo "hdf4-name=$(cat last-file.txt)" >> $GITHUB_OUTPUT

    - name: Get hdf4 release
      uses: dsaltares/fetch-gh-release-asset@master
      with:
        repo: 'byrnHDF/hdf4'
        #version: 'tags/hdf-4_2_16-2'
        #file: 'hdf-4_2_16-2-ubuntu-2204.tar.gz'
        version: 'tags/snapshot'
        file: '${{ steps.gethdf4base.outputs.hdf4-name }}-ubuntu-2204.tar.gz'

    - name: List files for the space (Linux)
      run: |
            ls -l ${{ github.workspace }}
            ls ${{ runner.workspace }}

    - name: Uncompress gh binary (Linux)
      run: tar -zxvf ${{ github.workspace }}/${{ steps.gethdf4base.outputs.hdf4-name }}-ubuntu-2204.tar.gz

    - name: Uncompress hdf4 binary (Linux)
      run: |
          cd "${{ github.workspace }}/hdf4"
          tar -zxvf ${{ github.workspace }}/hdf4/HDF-*-Linux.tar.gz --strip-components 1

#    - name: Install hdf4 binary (Linux)
#      run: sh ${{ github.workspace }}/${{ steps.gethdf4base.outputs.hdf4-name }}.sh --exclude-subdir --skip-license

    - name: set hdflib name
      id: set-hdflib-name
      env:
        HDFLIBS: ${{ github.workspace }}/hdf4/HDF_Group/HDF/*
      run: echo "HDFLIB_ENV=$HDFLIBS" >> $GITHUB_OUTPUT

    - name: Get hdf5 release base name
      uses: dsaltares/fetch-gh-release-asset@master
      with:
        repo: 'HDFGroup/hdf5'
        version: 'tags/snapshot'
        file: 'last-file.txt'

    - name: Read base-name file
      id: gethdf5base
      run: echo "hdf5-name=$(cat last-file.txt)" >> $GITHUB_OUTPUT

    - name: Get hdf5 release
      uses: dsaltares/fetch-gh-release-asset@master
      with:
        repo: 'HDFGroup/hdf5'
        #version: 'tags/1.14.2'
        #file: 'hdf5-1_14_2-ubuntu-2204.tar.gz'
        version: 'tags/snapshot'
        file: '${{ steps.gethdf5base.outputs.hdf5-name }}-ubuntu-2204.tar.gz'

    - name: List files for the space (Linux)
      run: |
            ls -l ${{ github.workspace }}
            ls ${{ runner.workspace }}

    - name: Uncompress gh binary (Linux)
      run: tar -zxvf ${{ github.workspace }}/${{ steps.gethdf5base.outputs.hdf5-name }}-ubuntu-2204.tar.gz

    - name: Uncompress hdf5 binary (Linux)
      run:  |
          cd "${{ github.workspace }}/hdf5"
          tar -zxvf ${{ github.workspace }}/hdf5/HDF5-*-Linux.tar.gz --strip-components 1

#    - name: Install hdf5 binary (Linux)
#      run: sh ${{ github.workspace }}/${{ steps.gethdf5base.outputs.hdf5-name }}.sh --exclude-subdir --skip-license

    - name: set hdf5lib name
      id: set-hdf5lib-name
      env:
        HDF5LIBS: ${{ github.workspace }}/hdf5/HDF_Group/HDF5/*
      run: echo "HDF5LIB_ENV=$HDF5LIBS" >> $GITHUB_OUTPUT

    - name: List files for the binaries (Linux)
      run: |
            ls -l ${{ github.workspace }}/hdf4/HDF_Group/HDF
            ls -l ${{ github.workspace }}/hdf5/HDF_Group/HDF5

    - name: Build with Ant
      env:
        HDFLIBS: ${{ steps.set-hdflib-name.outputs.HDFLIB_ENV }}
        HDF5LIBS: ${{ steps.set-hdf5lib-name.outputs.HDF5LIB_ENV }}
      run: ant -noinput -buildfile build.xml binaryPackage

    - name: List files in the space (Linux)
      run: |
            ls ${{ github.workspace }}
            ls -l ${{ runner.workspace }}

    # Save files created by ctest script
    - name: Save published binary (Linux)
      uses: actions/upload-artifact@v3
      with:
            name: tgz-ubuntu-2204-binary
            path: ${{ runner.workspace }}/hdfview-3.99.99-ubuntu-2204.tar.gz
            if-no-files-found: error # 'warn' or 'ignore' are also available, defaults to `warn`

  test:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up JDK 19
      uses: actions/setup-java@v3
      with:
        java-version: '19'
        distribution: 'temurin'

    - name: Build with Ant
      run: ant -noinput -buildfile build.xml junit

