<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <parent>
        <groupId>org.hdfgroup.hdfview</groupId>
        <artifactId>hdfview-bom</artifactId>
        <version>3.4-SNAPSHOT</version>
    </parent>

    <modelVersion>4.0.0</modelVersion>
    <artifactId>object</artifactId>
    <packaging>jar</packaging>
    <name>HDF Object Module</name>
    <description>The HDF Viewer Object API</description>
    <url>https://www.hdfgroup.org/download-hdfview/</url>

    <properties>
        <module-name>org.hdfgroup.object</module-name>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <repositories>
        <repository>
            <id>id-local</id>
            <url>file:${parent.repository.basedir}/lib</url>
        </repository>
    </repositories>

    <dependencies>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <!-- JUnit 5 dependencies -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- JUnit 4 compatibility during transition -->
        <dependency>
            <groupId>org.junit.vintage</groupId>
            <artifactId>junit-vintage-engine</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit4.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.maven.wagon</groupId>
            <artifactId>wagon-file</artifactId>
            <version>3.5.3</version>
        </dependency>
        <dependency>
            <groupId>fits</groupId>
            <artifactId>fits</artifactId>
            <version>1.0.0</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>netcdf</groupId>
            <artifactId>netcdf</artifactId>
            <version>1.0.0</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>jarhdf5</groupId>
            <artifactId>jarhdf5</artifactId>
            <version>${hdf5.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>jarhdf</groupId>
            <artifactId>jarhdf</artifactId>
            <version>${hdf.version}</version>
            <scope>compile</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!-- Enabling and configuring regular resources filtering. See also 
        section "resources" below -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.3</version>
                <configuration>
                    <!-- specify UTF-8, ISO-8859-1 or any other file encoding -->
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <exportAntProperties>true</exportAntProperties>
                            <target>
                                <property name="cp" refid="maven.compile.classpath" />
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.14.0</version>
                <configuration>
                    <source>21</source>
                    <target>21</target>
                    <release>21</release>
                    <!-- Force classpath mode instead of module path -->
                    <forceJavacCompilerUse>true</forceJavacCompilerUse>
                    <compilerArgs>
                        <arg>-cp</arg>
                        <arg>${cp}${path.separator}${project.parent.basedir}/target/*</arg>
                    </compilerArgs>
                </configuration>
                <executions>
                    <!-- Test compilation with explicit classpath mode -->
                    <execution>
                        <id>test-compile</id>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                        <configuration>
                            <compilerArgs>
                                <arg>--add-opens</arg>
                                <arg>java.base/java.lang=ALL-UNNAMED</arg>
                                <arg>--add-opens</arg>
                                <arg>java.base/java.time=ALL-UNNAMED</arg>
                            </compilerArgs>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.3.1</version>
                <configuration>
                    <outputDirectory>../libs</outputDirectory>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>install</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/lib</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <argLine>
                        --add-opens java.base/java.lang=ALL-UNNAMED
                        --add-opens java.base/java.time=ALL-UNNAMED
                        --add-opens java.base/java.time.format=ALL-UNNAMED
                        --add-opens java.base/java.util=ALL-UNNAMED
                        --enable-native-access=jarhdf5
                        -Djava.library.path=${project.parent.basedir}/target
                    </argLine>
                    <additionalClasspathElements>
                        <additionalClasspathElement>${project.parent.basedir}/target/*</additionalClasspathElement>
                    </additionalClasspathElements>
                </configuration>
            </plugin>
        </plugins>

        <pluginManagement><!-- lock down plugins versions to avoid using Maven 
        defaults (may be moved to parent pom) -->
        </pluginManagement>
    </build>

    <profiles>
        <profile>
            <id>mac</id>
            <activation>
                <os>
                    <family>mac</family>
                </os>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <execution>
                                <phase>generate-sources</phase>
                                <configuration>
                                    <target>
                                        <!-- Copy the application and dependencies -->
                                        <copy todir="../target">
                                            <fileset dir="${hdf.lib.dir}"
                                                followsymlinks="true">
                                                <include name="libhdf_java.dylib" />
                                            </fileset>
                                            <fileset dir="${hdf.lib.dir}"
                                                followsymlinks="true">
                                                <filename
                                                    regex="libhdf(\.[0-9][0-9]?)(\.dylib)$" />
                                                <exclude name="*.a" />
                                            </fileset>
                                            <fileset dir="${hdf.lib.dir}"
                                                followsymlinks="true">
                                                <filename
                                                    regex="libmfhdf(\.[0-9][0-9]?)(\.dylib)$" />
                                                <exclude name="*.a" />
                                            </fileset>
                                            <fileset dir="${hdf5.lib.dir}"
                                                followsymlinks="true">
                                                <include name="libhdf5_java.dylib" />
                                            </fileset>
                                            <fileset dir="${hdf5.lib.dir}"
                                                followsymlinks="true">
                                                <filename
                                                    regex="libhdf5(\.[0-9][0-9][0-9][0-9]?)(\.dylib)$" />
                                                <exclude name="*.a" />
                                            </fileset>
                                        </copy>
                                        <!-- Optional copy xdr -->
                                        <copy todir="../target"
                                            failonerror="false">
                                            <fileset dir="${hdf.lib.dir}"
                                                followsymlinks="true">
                                                <filename
                                                    regex="libxdr(\.[0-9])(\.dylib)$" />
                                                <exclude name="*.a" />
                                            </fileset>
                                        </copy>
                                        <!-- Optional copy plugins -->
                                        <mkdir dir="../target/plugin" />
                                        <copy todir="../target/plugin"
                                            failonerror="false">
                                            <fileset dir="${hdf5.lib.dir}/plugin">
                                                <include name="*.dylib" />
                                            </fileset>
                                        </copy>
                                    </target>
                                </configuration>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
            <properties>
            </properties>
        </profile>
        <profile>
            <id>unix</id>
            <activation>
                <os>
                    <family>unix</family>
                    <name>Linux</name>
                </os>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <execution>
                                <phase>generate-sources</phase>
                                <configuration>
                                    <target>
                                        <!-- Copy the application and dependencies -->
                                        <copy todir="../target">
                                            <fileset dir="${hdf.lib.dir}"
                                                followsymlinks="true">
                                                <include name="libhdf_java.so" />
                                            </fileset>
                                            <fileset dir="${hdf.lib.dir}"
                                                followsymlinks="true">
                                                <filename
                                                    regex="libhdf\.so(\.[0-9][0-9])$" />
                                            </fileset>
                                            <fileset dir="${hdf.lib.dir}"
                                                followsymlinks="true">
                                                <filename
                                                    regex="libmfhdf\.so(\.[0-9][0-9])$" />
                                            </fileset>
                                            <fileset dir="${hdf5.lib.dir}"
                                                followsymlinks="true">
                                                <include name="libhdf5_java.so" />
                                            </fileset>
                                            <fileset dir="${hdf5.lib.dir}"
                                                followsymlinks="true">
                                                <filename
                                                    regex="libhdf5\.so(\.[0-9][0-9][0-9][0-9]?)$" />
                                            </fileset>
                                        </copy>
                                        <!-- Optional copy xdr -->
                                        <copy todir="../target"
                                            failonerror="false">
                                            <fileset dir="${hdf.lib.dir}"
                                                followsymlinks="true">
                                                <filename regex="libxdr\.so(\.[0-9])$" />
                                                <exclude name="*.a" />
                                            </fileset>
                                        </copy>
                                        <!-- Optional copy plugins -->
                                        <mkdir dir="../target/plugin" />
                                        <copy todir="../target/plugin"
                                            failonerror="false">
                                            <fileset dir="${hdf5.lib.dir}/plugin">
                                                <include name="*.so" />
                                            </fileset>
                                        </copy>
                                    </target>
                                </configuration>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
            <properties>
            </properties>
        </profile>
        <profile>
            <id>windows</id>
            <activation>
                <os>
                    <family>windows</family>
                </os>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <execution>
                                <phase>generate-sources</phase>
                                <configuration>
                                    <target>
                                        <!-- Copy the application and dependencies -->
                                        <mkdir dir="../target/bin" />
                                        <copy todir="../target">
                                            <fileset dir="${hdf.lib.dir}">
                                                <include name="hdf_java.dll" />
                                                <exclude name="*.lib" />
                                            </fileset>
                                            <fileset dir="${hdf5.lib.dir}">
                                                <include name="hdf5_java.dll" />
                                                <exclude name="*.lib" />
                                            </fileset>
                                        </copy>
                                        <copy todir="../target/bin">
                                            <fileset dir="${hdf.lib.dir}">
                                                <include name="hdf_java.dll" />
                                            </fileset>
                                            <fileset dir="${hdf.lib.dir}/../bin">
                                                <include name="hdf_java.dll" />
                                                <include name="hdf.dll" />
                                                <include name="mfhdf.dll" />
                                            </fileset>
                                            <fileset dir="${hdf5.lib.dir}">
                                                <include name="hdf5_java.dll" />
                                            </fileset>
                                            <fileset dir="${hdf5.lib.dir}/../bin">
                                                <include name="hdf5_java.dll" />
                                                <include name="hdf5.dll" />
                                            </fileset>
                                        </copy>
                                        <!-- Optional copy xdr -->
                                        <copy todir="../target/bin"
                                            failonerror="false">
                                            <fileset dir="${hdf.lib.dir}/../bin">
                                                <include name="xdr.dll" />
                                            </fileset>
                                        </copy>
                                        <!-- Optional copy plugins -->
                                        <mkdir dir="../target/bin/plugin" />
                                        <copy todir="../target/bin/plugin"
                                            failonerror="false">
                                            <fileset dir="${hdf5.lib.dir}/plugin">
                                                <include name="*.dll" />
                                            </fileset>
                                        </copy>
                                    </target>
                                </configuration>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>

                <resources>
                    <resource>
                        <directory>src/main/resources</directory>
                        <filtering>true</filtering>
                    </resource>
                </resources>
            </build>
            <properties>
            </properties>
        </profile>
    </profiles>
</project>
