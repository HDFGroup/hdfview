************************************************************************
* How to use logging in HDFView and HDF-JAVA Library                   *
************************************************************************

HDFView has implemented logging in the java code with support for the
slf4j 1.7.* package. HDFView by default uses the slf4j-nop-1.7.*.jar.
This suppresses any logging information. See http://www.slf4j.org/ for
more information on the slf4j package.

To enable logging in HDFView, you must include the slf4j-simple-1.7.*
jar (or other slf4j compatible jar file) by overriding the default jar file.

HDFView:
  To enable logging in HDFView requires that HDFView uses an alternate
  classpath. Currently, this feature has been disabled due to the change
  to modules. However, logging can be re-enabled by building from source
  and forcing an alternate logging jar.

org.slf4j.simpleLogger.defaultLogLevel is the default log level for all instances of SimpleLogger.
It must be one of ("trace", "debug", "info", "warn", or "error"). If not specified, defaults to "info".

************************************************************************
* Example use of logging and the HDF5 JAVA Library                          *
************************************************************************

public class H5test {
    /**
     * Add logger for this class
     */

    private static final org.slf4j.Logger log = org.slf4j.LoggerFactory.getLogger(H5test.class);

    ...
    public int H5function (int arg)
    {
        log.info("H5function called with {}", arg);
        if (arg < 0) {
            log.warn("H5function with negative argument");
            return 0;
        }
        try {
            some_function();
        }
        catch (Exception ex) {
            log.debug("some_function failed: ", ex);
        }

        log.trace("H5function finished");

        return (arg * 3);
    }

